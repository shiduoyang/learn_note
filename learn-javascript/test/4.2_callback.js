/**
 * 2.1 continuation 回调函数包裹或者说封装了程序的延续。
 * 我们的大脑可以看成类似与单线程运行的事件循环队列。
 * 我们顺序阻塞式的大脑计划行为无法很好的映射到面向回调的异步代码
 */
/**
 * 回调地狱，也叫毁灭金字塔
 */
{
    function func1() {
        setTimeout(() => {
            console.log(1);
            setTimeout(() => {
                console.log(2)
                setTimeout(() => {
                    console.log(2)
                }, 1000);
            }, 1000);
        }, 1000);        
    }
    func1();
}
/**
 * 2.3信任问题
 * callback 是交给第三方来调用。控制饭庄。
 */


/**
 * 小结：
 * 回调表达程序异步和管理并发的两个主要缺陷：缺乏顺序性 和可信任性
 */